<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (gradient_max_value_rows)' inline='true' name='federated.00eobgq0kobqp11dz1xdi13po4n0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gradient_max_value_rows' name='excel-direct.1gwmqj11mkesb81fc8tf50amiz87'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/linzi/Downloads/gradient_max_value_rows.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gwmqj11mkesb81fc8tf50amiz87' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D31:no:A1:D31:0' header='yes' outcome='6'>
            <column datatype='integer' name='gradient_max_value_rows' ordinal='0' />
            <column datatype='real' name='Width' ordinal='1' />
            <column datatype='real' name='Height' ordinal='2' />
            <column datatype='real' name='Depth' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gwmqj11mkesb81fc8tf50amiz87' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D31:no:A1:D31:0' header='yes' outcome='6'>
            <column datatype='integer' name='gradient_max_value_rows' ordinal='0' />
            <column datatype='real' name='Width' ordinal='1' />
            <column datatype='real' name='Height' ordinal='2' />
            <column datatype='real' name='Depth' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D31:no:A1:D31:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gradient_max_value_rows</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gradient_max_value_rows]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gradient_max_value_rows</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Width]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Width</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Depth]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Depth</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0]' role='measure' type='quantitative' />
      <column caption='Gradient Max Value Rows' datatype='integer' name='[gradient_max_value_rows]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8F06A7D1652342BCA377FBB2F8EFCDF0'>
            <properties context=''>
              <relation connection='excel-direct.1gwmqj11mkesb81fc8tf50amiz87' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D31:no:A1:D31:0' header='yes' outcome='6'>
                  <column datatype='integer' name='gradient_max_value_rows' ordinal='0' />
                  <column datatype='real' name='Width' ordinal='1' />
                  <column datatype='real' name='Height' ordinal='2' />
                  <column datatype='real' name='Depth' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='gradient_max_value_rows'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (gradient_max_value_rows)' name='federated.00eobgq0kobqp11dz1xdi13po4n0' />
          </datasources>
          <datasource-dependencies datasource='federated.00eobgq0kobqp11dz1xdi13po4n0'>
            <column datatype='real' name='[Depth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Height]' role='measure' type='quantitative' />
            <column datatype='real' name='[Width]' role='measure' type='quantitative' />
            <column caption='Gradient Max Value Rows' datatype='integer' name='[gradient_max_value_rows]' role='measure' type='quantitative' />
            <column-instance column='[Depth]' derivation='Sum' name='[sum:Depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Height]' derivation='Sum' name='[sum:Height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Width]' derivation='Sum' name='[sum:Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gradient_max_value_rows]' derivation='Sum' name='[sum:gradient_max_value_rows:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Height:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Height:qk] + ([federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Depth:qk] + [federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:Width:qk]))</rows>
        <cols>[federated.00eobgq0kobqp11dz1xdi13po4n0].[sum:gradient_max_value_rows:qk]</cols>
      </table>
      <simple-id uuid='{DC458D17-E0D3-495F-AC00-42BCA95CE52A}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='gradient_max_value_rows'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6A0E9FA1-02FB-4AF0-9F03-CF209F952C8B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='gradient_max_value_rows' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
