<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (gradient_min_value_rows)' inline='true' name='federated.143niu40vunaly1cjc35q122uxb4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gradient_min_value_rows' name='excel-direct.08fsq1t1eaw7o51ghnwtr00nrfib'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/linzi/Downloads/gradient_min_value_rows.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.08fsq1t1eaw7o51ghnwtr00nrfib' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D29:no:A1:D29:0' header='yes' outcome='6'>
            <column datatype='integer' name='gradient_min_value_rows' ordinal='0' />
            <column datatype='real' name='Width' ordinal='1' />
            <column datatype='real' name='Height' ordinal='2' />
            <column datatype='real' name='Depth' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.08fsq1t1eaw7o51ghnwtr00nrfib' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D29:no:A1:D29:0' header='yes' outcome='6'>
            <column datatype='integer' name='gradient_min_value_rows' ordinal='0' />
            <column datatype='real' name='Width' ordinal='1' />
            <column datatype='real' name='Height' ordinal='2' />
            <column datatype='real' name='Depth' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D29:no:A1:D29:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gradient_min_value_rows</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gradient_min_value_rows]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gradient_min_value_rows</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0E47652356784689A1CF1B8952FC670D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Width]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Width</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0E47652356784689A1CF1B8952FC670D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0E47652356784689A1CF1B8952FC670D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Depth]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Depth</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0E47652356784689A1CF1B8952FC670D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0E47652356784689A1CF1B8952FC670D]' role='measure' type='quantitative' />
      <column caption='Gradient Min Value Rows' datatype='integer' name='[gradient_min_value_rows]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0E47652356784689A1CF1B8952FC670D'>
            <properties context=''>
              <relation connection='excel-direct.08fsq1t1eaw7o51ghnwtr00nrfib' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D29:no:A1:D29:0' header='yes' outcome='6'>
                  <column datatype='integer' name='gradient_min_value_rows' ordinal='0' />
                  <column datatype='real' name='Width' ordinal='1' />
                  <column datatype='real' name='Height' ordinal='2' />
                  <column datatype='real' name='Depth' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='gradient_min_value_rows'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (gradient_min_value_rows)' name='federated.143niu40vunaly1cjc35q122uxb4' />
          </datasources>
          <datasource-dependencies datasource='federated.143niu40vunaly1cjc35q122uxb4'>
            <column datatype='real' name='[Depth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Height]' role='measure' type='quantitative' />
            <column datatype='real' name='[Width]' role='measure' type='quantitative' />
            <column caption='Gradient Min Value Rows' datatype='integer' name='[gradient_min_value_rows]' role='measure' type='quantitative' />
            <column-instance column='[Depth]' derivation='Sum' name='[sum:Depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Height]' derivation='Sum' name='[sum:Height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Width]' derivation='Sum' name='[sum:Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gradient_min_value_rows]' derivation='Sum' name='[sum:gradient_min_value_rows:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.143niu40vunaly1cjc35q122uxb4].[sum:Height:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.143niu40vunaly1cjc35q122uxb4].[sum:Depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.143niu40vunaly1cjc35q122uxb4].[sum:Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.143niu40vunaly1cjc35q122uxb4].[sum:Height:qk] + ([federated.143niu40vunaly1cjc35q122uxb4].[sum:Depth:qk] + [federated.143niu40vunaly1cjc35q122uxb4].[sum:Width:qk]))</rows>
        <cols>[federated.143niu40vunaly1cjc35q122uxb4].[sum:gradient_min_value_rows:qk]</cols>
      </table>
      <simple-id uuid='{D3265143-7D20-46F2-8DA0-F33018502D1F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='gradient_min_value_rows'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{66AE8E17-247E-4C49-A96B-220D4C1A42B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='gradient_min_value_rows' width='192'>
      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
      dVncbb+zAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
